AWSTemplateFormatVersion: '2010-09-09'
Description: 'Vibe Dating - Core-Service DynamoDB Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name

Resources:
  # KMS Key for DynamoDB encryption
  DynamoDBKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub 'KMS key for Vibe Dating DynamoDB table encryption - ${Environment}'
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow DynamoDB to use the key
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: '*'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: auth

  DynamoDBKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/vibe-dating-dynamodb-${Environment}'
      TargetKeyId: !Ref DynamoDBKMSKey

  # DynamoDB Table
  VibeDatingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'vibe-dating-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
        - AttributeName: GSI2PK
          AttributeType: S
        - AttributeName: GSI2SK
          AttributeType: S
        - AttributeName: GSI3PK
          AttributeType: S
        - AttributeName: GSI3SK
          AttributeType: S

      # Primary key schema for main table access
      KeySchema:
        - AttributeName: PK  # Primary partition key for data distribution (e.g. USER#123, PROFILE#456)
          KeyType: HASH
        - AttributeName: SK  # Primary sort key for ordering within partitions (e.g. METADATA, PROFILE#789)
          KeyType: RANGE
      GlobalSecondaryIndexes:
        # GSI1 - User-based queries (e.g. get all profiles/media for a user)
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK  # Partition key for user-based queries (e.g. USER#123)
              KeyType: HASH
            - AttributeName: GSI1SK  # Sort key for user items (e.g. PROFILE#456, MEDIA#789)
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        # GSI2 - Time-based queries (e.g. recently updated profiles, last active users)
        - IndexName: GSI2
          KeySchema:
            - AttributeName: GSI2PK  # Partition key for time-based queries (e.g. TIME#2024-01-01)
              KeyType: HASH
            - AttributeName: GSI2SK  # Sort key for exact timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        # GSI3 - Location/Geographic queries (e.g. users in specific cities)
        - IndexName: GSI3
          KeySchema:
            - AttributeName: GSI3PK  # Partition key for location queries (e.g. LOCATION#NYC)
              KeyType: HASH
            - AttributeName: GSI3SK  # Sort key for location details
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !Ref DynamoDBKMSKey
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: auth

Outputs:
  DynamoDBTableName:
    Description: 'DynamoDB Table Name'
    Value: !Ref VibeDatingTable
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBTableName'

  # DynamoDBTableArn:
  #   Description: 'DynamoDB Table ARN'
  #   Value: !GetAtt VibeDatingTable.Arn
  #   Export:
  #     Name: !Sub '${AWS::StackName}-DynamoDBTableArn'

  # DynamoDBKMSKeyArn:
  #   Description: 'DynamoDB KMS Key ARN'
  #   Value: !GetAtt DynamoDBKMSKey.Arn
  #   Export:
  #     Name: !Sub '${AWS::StackName}-DynamoDBKMSKeyArn'
  DynamoDBKMSKeyArn:
    Value: !GetAtt DynamoDBKMSKey.Arn
  DynamoDBTableArn:
    Value: !GetAtt VibeDatingTable.Arn

  DynamoDBKMSKeyAliasName:
    Description: 'DynamoDB KMS Key Alias Name'
    Value: !Ref DynamoDBKMSKeyAlias
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBKMSKeyAliasName' 